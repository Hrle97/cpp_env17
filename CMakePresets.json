{
    "version"              : 2,
    "cmakeMinimumRequired" : {
        "major" : 3,
        "minor" : 20,
        "patch" : 0
    },
    "configurePresets"     : [
        {
            "name"           : "debug",
            "displayName"    : "Debug",
            "description"    : "Debug cmake configuration and environment. Using Clang and Ninja. Please run this preset before any other configure command so that FetchContent can run safely.",
            "binaryDir"      : "${sourceDir}/builds/debug",
            "generator"      : "Ninja",
            "cacheVariables" : {
                "CMAKE_BUILD_TYPE"   : "Debug",
                "CMAKE_CXX_COMPILER" : "clang++",
                "CMAKE_C_COMPILER"   : "clang"
            },
            "debug"          : {
                "output"     : true,
                "find"       : true,
                "tryCompile" : true
            },
            "warnings"       : {
                "deprecated"    : true,
                "dev"           : true,
                "systemVars"    : true,
                "uninitialized" : true,
                "unusedCli"     : true
            },
            "errors"         : {
                "dev"        : true,
                "deprecated" : true
            }
        },
        {
            "name"           : "release",
            "displayName"    : "Release",
            "description"    : "Default release preset. Using Ninja and Clang.",
            "binaryDir"      : "${sourceDir}/builds/release",
            "generator"      : "Ninja",
            "cacheVariables" : {
                "CMAKE_BUILD_TYPE"   : "Release",
                "CMAKE_CXX_COMPILER" : "clang++",
                "CMAKE_C_COMPILER"   : "clang"
            }
        },
        {
            "name"           : "coverage",
            "displayName"    : "Coverage",
            "description"    : "Default coverage preset. Using Ninja and Clang.",
            "binaryDir"      : "${sourceDir}/builds/coverage",
            "generator"      : "Ninja",
            "cacheVariables" : {
                "CMAKE_BUILD_TYPE"   : "Release",
                "CMAKE_CXX_COMPILER" : "clang++",
                "CMAKE_C_COMPILER"   : "clang",
                "CMAKE_CXX_FLAGS"    : "--coverage"
            }
        },
        {
            "name"           : "clang",
            "displayName"    : "Clang",
            "description"    : "Default Clang preset. For checking if it compiles smoothly.",
            "binaryDir"      : "${sourceDir}/builds/clang",
            "generator"      : "Ninja",
            "cacheVariables" : {
                "CMAKE_BUILD_TYPE"   : "Release",
                "CMAKE_CXX_COMPILER" : "clang++",
                "CMAKE_C_COMPILER"   : "clang"
            }
        },
        {
            "name"           : "gcc",
            "displayName"    : "GCC",
            "description"    : "Default GCC preset. For checking if it compiles smoothly.",
            "binaryDir"      : "${sourceDir}/builds/gcc",
            "generator"      : "Ninja",
            "cacheVariables" : {
                "CMAKE_BUILD_TYPE"   : "Release",
                "CMAKE_CXX_COMPILER" : "g++",
                "CMAKE_C_COMPILER"   : "gcc"
            }
        },
        {
            "name"           : "msvc",
            "displayName"    : "MSVC",
            "description"    : "Default MSVC preset. amd64 host targeting amd64. For checking if it compiles smoothly.",
            "binaryDir"      : "${sourceDir}/builds/msvc",
            "generator"      : "Ninja",
            "cacheVariables" : {
                "CMAKE_BUILD_TYPE"   : "Release",
                "CMAKE_CXX_COMPILER" : "cl",
                "CMAKE_C_COMPILER"   : "cl"
            },
            "architecture"   : {
                "value"    : "amd64",
                "strategy" : "set"
            }
        },
        {
            "name"           : "clang-cl",
            "displayName"    : "Clang for Windows",
            "description"    : "Default Clang for Windows preset. For checking if it compiles smoothly.",
            "binaryDir"      : "${sourceDir}/builds/clang-cl",
            "generator"      : "Ninja",
            "cacheVariables" : {
                "CMAKE_BUILD_TYPE"   : "Release",
                "CMAKE_CXX_COMPILER" : "clang-cl",
                "CMAKE_C_COMPILER"   : "clang-cl"
            }
        }
    ]
}